n = int(input())   # –¥–ª–∏–Ω–∞ —Å–ø–∏—Å–∫–∞
lst = list(map(int, input().split()))

flag = True
res = 0   # –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–æ–∫

while flag:
    count = 0  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–æ–∫ –∑–∞ 1 –ø—Ä–æ—Ö–æ–¥ –ø–æ —Å–ø–∏—Å–∫—É
    for i in range(n-1):
        if lst[i] > lst[i+1]:
            lst[i], lst[i+1] = lst[i+1], lst[i]
            count += 1
    if count > 0:   # –µ—Å–ª–∏ –±—ã–ª–∞ —Ö–æ—Ç—è –±—ã 1 –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∞
        n -= 1
        res += count
    else:
        flag = False # –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞

print(*lst) # –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
print(res) # –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–æ–∫
------------------------------------------------------
******************************************************
------------------------------------------------------
import sqlite3

class Database:
    def __init__(self, db_name):
        self.db_name = db_name
        self.connection = sqlite3.connect(self.db_name)

    def get_user(self, name, password):
        with self.connection as connection:
            cursor = connection.cursor()
            rows = cursor.execute('select * from user where name = ? and password = ?', (name, password))
            res = rows.fetchone()

            return res


    def get_task_by_id(self, task_id, user_id):
        with self.connection as connection:
            cursor = connection.cursor()
            rows = cursor.execute('select * from task where id = ? and user_id = ?', (task_id, user_id))
            res = rows.fetchone()

            return res

    def get_tasks(self, user_id):
        with self.connection as connection:
            cursor = connection.cursor()
            cursor.execute('select * from task where user_id = ?', (user_id, ))
            rows = cursor.fetchall()

            return rows

    def add_task(self, name, user_id):
        with self.connection as connection:
            cursor = connection.cursor()
            cursor.execute('insert into task (name, status, user_id) values (?, ?, ?)', (name, '—Å–¥–µ–ª–∞—Ç—å', user_id))

    def delete_tasks(self, task_id):
        with self.connection as connection:
            cursor = connection.cursor()
            cursor.execute('delete from task where id = ?', (task_id, ))

    def update_tasks(self, task_id):
        with self.connection as connection:
            cursor = connection.cursor()
            cursor.execute("update todo  set status = '—Å–¥–µ–ª–∞–Ω–æ' where id = ?", (task_id,))

    def __del__(self):
        print('–ó–∞–∫–∞–Ω—á–∏–≤–∞—é —Ä–∞–±–æ—Ç—É —Å –±–∞–∑–æ–π')
        self.connection.close()


class User:
    def __init__(self, name, password, db):
        self.name = name
        self.password = password
        self.db = db

    def auth(self):
        user = self.db.get_user(self.name, self.password)
        if user:
            return user[0]
        return None


db = Database('C:\\Users\\–ë - 6\\Documents\\–õ–æ–≥–∏–Ω–æ–≤–∞ –ê–ª–ª–∞\\Python\\–ó–∞–Ω—è—Ç–∏–µ 77-78\\todo.db')
emoji = {'—Å–¥–µ–ª–∞—Ç—å': ' üî¥', '—Å–¥–µ–ª–∞–Ω–æ': ' üü¢'}

name = input('–í–≤–µ–¥–∏ –∏–º—è: ')
password = input('–í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å: ')


auth = False

user_id = User(name, password, db).auth()

if user_id:
    auth = True
    print('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ–≤—à–Ω–∞')
else:
    print('–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å')


while True and auth:
    print('–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?')
    print('1 - –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∑–∞–¥–∞—á–∏')
    print('2 - –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É')
    print('3 - —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É')
    print('q')

    res = input('–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä: ')

    if res == '1':
        rows = db.get_tasks(user_id)
        print('\n –í–æ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á')
        for row in rows:
            task_str = f'{row[0]}. {row[1]} - {row[2]}{emoji[row[2]]}'
            print(task_str)
        print('\n')

    if res == '2':
        name = input('–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ ')
        db.add_task(name, user_id)
        print('–ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞')

    if res == '3':
        task_id = input('–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏')
        task = db.get_task_by_id(task_id, user_id)
        if task:
            db.delete_tasks(task_id, user_id)
            print('–ó–∞–¥–∞—á–∞ —É–¥–∞–ª–µ–Ω–∞ üòÉ')
        else:
            print('–¢–∞–∫–æ–π –∑–∞–¥–∞—á–∏ –Ω–µ—Ç')


    if res == 'q':
        break

